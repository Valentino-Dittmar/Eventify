name: CI/CD Workflow

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Set up Gradle for optimal use in GitHub Actions
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4.0.0

      # Build the project using Gradle Wrapper
      - name: Build with Gradle Wrapper
        run: ./gradlew build

      - name: Run Tests
        run: ./gradlew test

      # - name: Generate JaCoCo Report
      #   run: ./gradlew jacocoTestReport sonar

      - name: Run SonarQube Analysis/Test
        run: |
          ./gradlew jacocoTestReport sonar \
          -Dsonar.projectKey=Valentino-Dittmar_Eventify \
          -Dsonar.organization=valentino-dittmar \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.coverage.jacoco.xmlReportPaths=build/reports/jacoco/test/jacocoTestReport.xml

  dependency-submission:
    runs-on: ubuntu-latest
    needs: build-and-test
    permissions:
      contents: write

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up JDK 17 for dependency graph
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Generate and submit dependency graph for Dependabot Alerts
      - name: Generate and submit dependency graph
        uses: gradle/actions/dependency-submission@v4.0.0

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Docker Buildx for cross-platform builds
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Log in to Docker Hub using GitHub Secrets
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build and Push Docker Image to Docker Hub
      - name: Build and Push Docker Image
        uses: mr-smithers-excellent/docker-build-push@v4
        with:
          image: valentinodittmar/fontys-project123
          tag: latest
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
