plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.0'
    id 'io.spring.dependency-management' version '1.1.0'
    id "org.sonarqube" version "5.1.0.4882"
    id 'jacoco'
}

group = 'Individual'
version = '1.0-SNAPSHOT'
sonar {
    properties {
//        property "sonar.projectKey", "Eventify"
//        property "sonar.projectName", "Eventify"
//        property("sonar.host.url", "http://localhost:9000")
        property("sonar.token", "a0fc666dca5647f55c8dcd3d9463b41c5551bfb5")
        property("sonar.coverage.exclusions",
                "src/main/java/individual/configuration/**," +
                        "src/main/java/individual/controller/**," +
                        "src/main/java/individual/domain/**," +
                        "src/main/java/individual/persistence/**")
        property "sonar.projectKey", "Valentino-Dittmar_Eventify"
        property "sonar.organization", "valentino-dittmar"
        property "sonar.host.url", "https://sonarcloud.io"


    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}
repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // Database
    implementation 'mysql:mysql-connector-java:8.0.33'
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-mysql'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // Jackson
    implementation 'com.fasterxml.jackson.core:jackson-core:2.18.2'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.18.2'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.18.2'

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // Google OAuth
    implementation 'com.google.oauth-client:google-oauth-client:1.36.0'
    implementation 'com.google.http-client:google-http-client-jackson2:1.45.1'

    // SpringDoc
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.apache.httpcomponents.client5:httpclient5'
}

test {
    useJUnitPlatform()
}
jacocoTestReport {
    reports {
        xml.required = true
    }
}

